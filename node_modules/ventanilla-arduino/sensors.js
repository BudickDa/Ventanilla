var five = require('johnny-five');
var initFunctions = {};

//todo: comment
initFunctions.LD35 = function(block,input){
  var LD35 = new five.Sensor(block.hardware);
  LD35.board = blocks[input]
  LD35.block = block;
  LD35.output = function(v){
    return {'celsius': (v * 500)/1024, 'voltage': v};
  }
  return LD35;
}

//todo: comment
initFunctions.Potentiometer = function(block){
  Potentiometer = new five.Sensor({
    pin: block.hardware.pin,
    freq: block.hardware.freq
  });
  Potentiometer.block = block;
  Potentiometer.output = function(v){
    return {'ohm': v};
  }
  return Potentiometer;
}

//init Sensors


exports.registerSensor = function(block,cb){
  if(initFunctions[block.name]!==undefined){
    for(i in block.input){
      console.log("Register Sensor on ArduinoBoard " + block.input[i]);
      var input = blocks[block.input[i]];
      if(input === undefined || input === null){
        console.log("Error in tryRegister at sensor.js: Board not found. Input is "+ blocks[input] + ". The Uid is: " + input);
      } else{
        tryRegister(block, block.input[i], cb);
      }
    }
  }else{
    console.log("Sensor: Type is undefined!");
  }
}

function tryRegister(block, input, cb){
  try{
    if(!blocks[input].ready){
      console.log("Board is not ready... waiting.");
      return blocks[input].on("ready", function() {
        console.log("Board is ready.");
        blocks[block.uid] = initFunctions[block.name](block,input);
        blocks[block.uid].uid = block.uid;
        console.log("Input found.")
        return cb(block.uid);
      });
    }else{
      console.log("Board is ready.");
      blocks[block.uid] = initFunctions[block.name](block,input);
      blocks[block.uid].uid = block.uid;
      console.log("Input found.")
      return cb(block.uid);
    }
  }catch(e){
    console.log("Error in tryRegister at sensor.js: " + e);
  }
}


