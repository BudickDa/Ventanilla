var five = require('johnny-five');
var ventanilla = require("ventanilla");
var initFunctions = {};

//todo: comment
initFunctions.LD35 = function(block,board){
  var LD35 = new five.Sensor(block.hardware);
  LD35.board = board;
  LD35.block = block;
  LD35.output = function(v,type){
    if(type===undefined)
    {
      return {'celsius': (v * 500)/1024, 'voltage': v};
    }
    if(type==="celsius"){
       return (v * 500)/1024;
    }
    else if(type==="voltage"){
      return v;
    }
  }
  return LD35;
}

//todo: comment
/*initFunctions.Potentiometer = function(block){
  Potentiometer = new five.Sensor({
    pin: block.hardware.pin,
    freq: block.hardware.freq
  });
  Potentiometer.block = block;
  Potentiometer.output = function(v){
    return {'ohm': v};
  }
  return Potentiometer;
}*/

//init Sensors


exports.registerSensor = registerSensor;




function registerSensor(block,cb){
  if(initFunctions[block.name]!==undefined){
    for(i in block.input){
      console.log("Register Sensor on ArduinoBoard " + block.input[i]);
      if(blocks[block.input[i].uid] === undefined || blocks[block.input[i].uid] === null){
        console.log("Error in tryRegister at sensor.js: Board not found. Input is "+ block.input[i].uid + ". The board is: " + blocks[block.input[i].uid]);
        return setTimeout(function(){
          return registerSensor(block, cb)}
        ,1500);
      } else{
        var board = blocks[block.input[i].uid];
        tryRegister(block, board, block.pins, cb);
      }
    }
  }else{
    console.log("Sensor: Type is undefined!");
  }
}

function tryRegister(block, board, output, cb){
  if(!board.isReady){
    console.log("Board is not ready... waiting.");
    return setTimeout(function(){
      return tryRegister(block, board, output, cb)}
    ,1500);
  }else{
    console.log("Board is ready.");
    blocks[block.uid] = initFunctions[block.name](block,board);
    blocks[block.uid].uid = block.uid;
    return cb(block.uid,output,block.type);
  }
}


