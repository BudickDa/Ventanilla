var modules = {};
/*
* Initilize hardware
* Input: config is a dynamicly generated file. It contains:
* - which boards shall be included and what ports do they have
*/
var api
exports.init = function(){
  if(module_exists('ventanilla-arduino')){
    modules.arduino = require('ventanilla-arduino');
  }
  if(module_exists('./logicTypes')){
    modules.logicTypes = require('./logicTypes');
  }
  if(module_exists('./api')){
    modules.api = require('./api');
  }
  return true;
}



/*Helper*/
var module_exists = function(name){
  try {return require.resolve(name)}
  catch(e){return false}
}

exports.registerBlock = function(block){
  if(block.system === "arduino"){
    if(modules.arduino !== undefined){
      if(block.type === "Sensor"){
        try{
          console.log("Will create Sensor " + block.name + " - pending");
          return modules.arduino.initSensor(block);
        }catch(e){
          return console.log("Error in registerBlock in ventanilla/index.js: Initilization of Sensor " + block.name + "went wrong:" + e);
        }
      } else if(block.type === "ArduinoUno"){
          try{
            console.log("Will create ArduninoUno - pending");
            return modules.arduino.initBoard(block);
          }catch(e){
            return console.log("Error in registerBlock in ventanilla/index.js: Initilization of Sensor " + block.name + "went wrong:" + e);
        }
      }
      else{
        return console.log("Error in RegisterBlock in ventanilla/index.js: Blocktype is not available in System Arduino");
      }
    }else{
      return console.log("Error in RegisterBlock in ventanilla/index.js: Arduinomodul is not available.");
    }
  }
  else if(block.system == "Logic"){
    console.log("Will create Logic  - pending");
    var add = modules.logicTypes[block.name];
    return add(block);
  }
  else if(block.system == "nodejs"){
    if(block.type === "Ui"){
      //nothing todo here...
      console.log("Will create Ui - pending");
      console.log("Will create Ui - initilizing");
      console.log("Will create Ui - succesfull");
      return;
    }
    if(block.type === "Api"){
      console.log("Will create Api - pending");
      return modules.api.initApi(block);

    }
  }
}


exports.sendData = function(uid,pins,type){
  if(type==="Sensor"){
    try{
      blocks[uid].on('data', function(){
        for(i in pins){
          try{
            if(blocks[uid].value===null){
              blocks[uid].value = {};
            }
            if(blocks[uid]!==undefined){
              blocks[uid].value[pins[i].pid] = this.output(this.value,pins[i].type);
              app.io.broadcast('pid'+pins[i].pid,this.output(this.value,pins[i].type));
            }
          }catch(e){
            console.log("Error at sendData in ventanilla/index.js while broadcasting " + type + ": " + e);
          }
        }
      });
    }catch(e){
      console.log("Error at sendData in ventanilla/index.js while fetching data: " + e);
    }
  }
}
