if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/terminal-output/terminal-output.js']) {
   __coverage__['build/terminal-output/terminal-output.js'] = {"path":"build/terminal-output/terminal-output.js","s":{"1":0,"2":0,"3":0,"4":0},"b":{},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":27},"end":{"line":1,"column":46}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":19},"end":{"line":16,"column":59}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":56,"column":44}},"2":{"start":{"line":16,"column":0},"end":{"line":18,"column":2}},"3":{"start":{"line":17,"column":3},"end":{"line":17,"column":83}},"4":{"start":{"line":19,"column":0},"end":{"line":53,"column":3}}},"branchMap":{},"code":["(function () { YUI.add('terminal-output', function (Y, NAME) {","","/**"," * @module terminal-output"," */","","/**"," * Class that extends Terminal to differenciate Input/Output terminals"," * @class TerminalOutput"," * @extends Terminal"," * @constructor"," * @param {HTMLElement} parentEl Parent dom element"," * @param {Object} options configuration object"," * @param {Container} container (Optional) Container containing this terminal"," */","Y.TerminalOutput = function (parentEl, options, container) {","   Y.TerminalOutput.superclass.constructor.call(this,parentEl, options, container);","};","Y.extend(Y.TerminalOutput, Y.Terminal, {","   ","   /**","    * @attribute direction","    * @description direction vector of the wires when connected to this terminal","    * @type Array","    * @default [0,1]","    */","   direction: [0,1],","   ","   /**","    * @attribute fakeDirection","    * @description direction vector of the \"editing\" wire when it started from this terminal","    * @type Array","    * @default [0,-1]","    */","   fakeDirection: [0,-1],","   ","   /**","    * @attribute ddConfig","    * @description configuration of the Y.TerminalProxy object","    * @type Object","    * @default  { type: \"output\", allowedTypes: [\"input\"] }   ","    */","   ddConfig: { type: \"output\", allowedTypes: [\"input\"] }   ,","   ","   /**","    * @attribute alwaysSrc","    * @description forces this terminal to be the src terminal in the wire config","    * @type Boolean","    * @default true","    */","   alwaysSrc: true","   ","});","","","}, '@VERSION@', {\"requires\": [\"terminal\"]});","","}());"]};
}
var __cov_SWrh5BZWYLfg_NA9yKTI4w = __coverage__['build/terminal-output/terminal-output.js'];
__cov_SWrh5BZWYLfg_NA9yKTI4w.s['1']++;YUI.add('terminal-output',function(Y,NAME){__cov_SWrh5BZWYLfg_NA9yKTI4w.f['1']++;__cov_SWrh5BZWYLfg_NA9yKTI4w.s['2']++;Y.TerminalOutput=function(parentEl,options,container){__cov_SWrh5BZWYLfg_NA9yKTI4w.f['2']++;__cov_SWrh5BZWYLfg_NA9yKTI4w.s['3']++;Y.TerminalOutput.superclass.constructor.call(this,parentEl,options,container);};__cov_SWrh5BZWYLfg_NA9yKTI4w.s['4']++;Y.extend(Y.TerminalOutput,Y.Terminal,{direction:[0,1],fakeDirection:[0,-1],ddConfig:{type:'output',allowedTypes:['input']},alwaysSrc:true});},'@VERSION@',{'requires':['terminal']});
